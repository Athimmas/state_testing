
    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: STATE_DUMMY

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (STATE_DUMMY) [1/1=100.0%] state_test.F90(1,9)
  -> EXTERN: (1,9) for_set_reentrancy
  -> EXTERN: (88,12) for_random_number
  -> EXTERN: (89,12) for_random_number
  -> EXTERN: (90,12) for_random_number
  -> EXTERN: (91,12) for_random_number
  -> EXTERN: (110,36) __powr8i4
  -> EXTERN: (121,12) omp_set_num_threads
  -> EXTERN: (122,18) omp_get_wtime
  -> EXTERN: (193,18) omp_get_wtime
  -> EXTERN: (195,7) for_write_seq_lis
  -> EXTERN: (197,7) for_write_seq_lis
  -> EXTERN: (198,7) for_write_seq_lis
  -> EXTERN: (199,7) for_write_seq_lis
  -> EXTERN: (200,7) for_write_seq_lis
  -> EXTERN: (201,7) for_write_seq_lis
  -> EXTERN: (202,7) for_write_seq_lis
  -> EXTERN: (203,7) for_write_seq_lis
  -> EXTERN: (204,7) for_write_seq_lis
  -> EXTERN: (205,7) for_write_seq_lis


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at state_test.F90(124,7)
   remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at state_test.F90(82,7)
   remark #15388: vectorization support: reference tmin has aligned access
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 2.660 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=15
LOOP END

LOOP BEGIN at state_test.F90(83,7)
   remark #15388: vectorization support: reference tmax has aligned access
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 2.660 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=15
LOOP END

LOOP BEGIN at state_test.F90(84,7)
   remark #25408: memset generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at state_test.F90(85,7)
   remark #15388: vectorization support: reference smax has aligned access
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 2.660 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=15
LOOP END

LOOP BEGIN at state_test.F90(88,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at state_test.F90(88,12)
      remark #15388: vectorization support: reference TQ.0.1_ptr.var has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 104 
      remark #15477: vector loop cost: 38.000 
      remark #15478: estimated potential speedup: 2.730 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15482: vectorized math library calls: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1372
   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(89,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at state_test.F90(89,12)
      remark #15388: vectorization support: reference SQ.0.1_ptr.var has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 104 
      remark #15477: vector loop cost: 38.000 
      remark #15478: estimated potential speedup: 2.730 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15482: vectorized math library calls: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1372
   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(90,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at state_test.F90(90,12)
      remark #15388: vectorization support: reference TEMPK.0.1_ptr.var has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 104 
      remark #15477: vector loop cost: 38.000 
      remark #15478: estimated potential speedup: 2.730 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15482: vectorized math library calls: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1372
   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(91,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at state_test.F90(91,12)
      remark #15388: vectorization support: reference SALTK.0.1_ptr.var has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 104 
      remark #15477: vector loop cost: 38.000 
      remark #15478: estimated potential speedup: 2.730 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15482: vectorized math library calls: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1372
   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(197,16)
   remark #25420: Collapsed with loop at line 197 
   remark #15388: vectorization support: reference WORK1.0.1_ptr.var has aligned access
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 2.390 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=470596

   LOOP BEGIN at state_test.F90(197,16)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(198,16)
   remark #25420: Collapsed with loop at line 198 
   remark #15388: vectorization support: reference WORK2.0.1_ptr.var has aligned access
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 2.390 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=470596

   LOOP BEGIN at state_test.F90(198,16)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(199,16)
   remark #25420: Collapsed with loop at line 199 
   remark #15388: vectorization support: reference WORK3.0.1_ptr.var has aligned access
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 2.390 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=470596

   LOOP BEGIN at state_test.F90(199,16)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(200,16)
   remark #25420: Collapsed with loop at line 200 
   remark #15388: vectorization support: reference WORK4.0.1_ptr.var has aligned access
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 2.390 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=470596

   LOOP BEGIN at state_test.F90(200,16)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(201,16)
   remark #25420: Collapsed with loop at line 201 
   remark #15388: vectorization support: reference DRHODS.0.1_ptr.var has aligned access
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 2.390 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=470596

   LOOP BEGIN at state_test.F90(201,16)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(202,16)
   remark #25420: Collapsed with loop at line 202 
   remark #15388: vectorization support: reference DRHODT.0.1_ptr.var has aligned access
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 2.390 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=470596

   LOOP BEGIN at state_test.F90(202,16)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(203,16)
   remark #25420: Collapsed with loop at line 203 
   remark #15388: vectorization support: reference RHOOUT.0.1_ptr.var has aligned access
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 2.390 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=470596

   LOOP BEGIN at state_test.F90(203,16)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(204,16)
   remark #25420: Collapsed with loop at line 204 
   remark #15388: vectorization support: reference RHOFULL.0.1_ptr.var has aligned access
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 2.390 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=470596

   LOOP BEGIN at state_test.F90(204,16)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(205,16)
   remark #25420: Collapsed with loop at line 205 
   remark #15388: vectorization support: reference DENOMK.0.1_ptr.var has aligned access
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 2.390 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=470596

   LOOP BEGIN at state_test.F90(205,16)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at state_test.F90(134,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at state_test.F90(135,7)
      remark #25427: Loop Statements Reordered
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(139,7) ]
      remark #15388: vectorization support: reference saltk has aligned access   [ state_test.F90(139,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(137,7) ]
      remark #15388: vectorization support: reference tempk has aligned access   [ state_test.F90(137,7) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(140,7) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(140,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(138,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(138,7) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(141,7) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(141,7) ]
      remark #15388: vectorization support: reference sqr has aligned access   [ state_test.F90(142,7) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(142,7) ]
      remark #15388: vectorization support: reference work1 has aligned access   [ state_test.F90(145,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(145,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(145,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(145,7) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(145,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(145,7) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(145,7) ]
      remark #15388: vectorization support: reference work3 has aligned access   [ state_test.F90(165,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(165,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(165,10) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(165,10) ]
      remark #15388: vectorization support: reference work2 has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference sqr has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(149,7) ]
      remark #15388: vectorization support: reference work4 has aligned access   [ state_test.F90(169,10) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(169,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(169,10) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(169,10) ]
      remark #15388: vectorization support: reference sqr has aligned access   [ state_test.F90(169,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(169,10) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(169,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(169,10) ]
      remark #15388: vectorization support: reference denomk has aligned access   [ state_test.F90(154,7) ]
      remark #15388: vectorization support: reference work2 has aligned access   [ state_test.F90(154,7) ]
      remark #15388: vectorization support: reference rhoout has aligned access   [ state_test.F90(157,10) ]
      remark #15388: vectorization support: reference work1 has aligned access   [ state_test.F90(157,10) ]
      remark #15388: vectorization support: reference denomk has aligned access   [ state_test.F90(157,10) ]
      remark #15388: vectorization support: reference rhofull has aligned access   [ state_test.F90(161,10) ]
      remark #15388: vectorization support: reference work1 has aligned access   [ state_test.F90(161,10) ]
      remark #15388: vectorization support: reference denomk has aligned access   [ state_test.F90(161,10) ]
      remark #15388: vectorization support: reference drhodt has aligned access   [ state_test.F90(175,10) ]
      remark #15388: vectorization support: reference work3 has aligned access   [ state_test.F90(175,10) ]
      remark #15388: vectorization support: reference work1 has aligned access   [ state_test.F90(175,10) ]
      remark #15388: vectorization support: reference denomk has aligned access   [ state_test.F90(175,10) ]
      remark #15388: vectorization support: reference work4 has aligned access   [ state_test.F90(175,10) ]
      remark #15388: vectorization support: reference denomk has aligned access   [ state_test.F90(175,10) ]
      remark #15388: vectorization support: reference work3 has aligned access   [ state_test.F90(179,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(179,10) ]
      remark #15388: vectorization support: reference sq has aligned access   [ state_test.F90(179,10) ]
      remark #15388: vectorization support: reference work4 has aligned access   [ state_test.F90(182,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(182,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(182,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(182,10) ]
      remark #15388: vectorization support: reference sqr has aligned access   [ state_test.F90(182,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(182,10) ]
      remark #15388: vectorization support: reference tq has aligned access   [ state_test.F90(182,10) ]
      remark #15388: vectorization support: reference drhods has aligned access   [ state_test.F90(186,10) ]
      remark #15388: vectorization support: reference work3 has aligned access   [ state_test.F90(186,10) ]
      remark #15388: vectorization support: reference work1 has aligned access   [ state_test.F90(186,10) ]
      remark #15388: vectorization support: reference denomk has aligned access   [ state_test.F90(186,10) ]
      remark #15388: vectorization support: reference work4 has aligned access   [ state_test.F90(186,10) ]
      remark #15388: vectorization support: reference denomk has aligned access   [ state_test.F90(186,10) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 46 
      remark #15449: unmasked aligned unit stride stores: 17 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 365 
      remark #15477: vector loop cost: 165.000 
      remark #15478: estimated potential speedup: 2.210 
      remark #15479: lightweight vector operations: 221 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 55
      remark #25015: Estimate of max trip count of loop=1372
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

state_test.F90(84,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (64, 0)
===========================================================================
